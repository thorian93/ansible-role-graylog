---
### Elasticsearch

- name: "Install RPM Key for the Elasticsearch Repository."
  rpm_key:
    key: "{{ graylog_es_gpgkey }}"
    state: present

- name: "Install Elasticsearch Repository."
  yum_repository:
    name: "{{ item.name }}"
    baseurl: "{{ item.baseurl }}"
    description: "{{ item.description }}"
    file: "{{ item.file }}"
    gpgcheck: "{{ item.gpgcheck }}"
    gpgkey: "{{ item.gpgkey }}"
    state: "present"
  with_items: "{{ graylog_sidecar_es_repository }}"

- name: "Install Elasticsearch."
  package:
    name: "elasticsearch"
    state: "present"
  notify:
    - "systemd dameon-reload"
    - "restart elasticsearch"

- name: "Create Directories."
  become: yes
  file: path={{ item }} state=directory owner={{ graylog_es_user }} group={{ graylog_es_group }}
  with_items:
    - "{{ graylog_es_pid_dir }}"
    - "{{ graylog_es_log_dir }}"
    - "{{ graylog_es_conf_dir }}"

- name: "Create Data Directories."
  become: yes
  file: path={{ item }} state=directory owner={{ graylog_es_user }} group={{ graylog_es_group }}
  with_items:
    - "{{ graylog_es_data_dirs }}"

- name: "Copy Configuration File."
  become: yes
  template:
    src: elasticsearch.yml.j2
    dest: "{{ graylog_es_conf_dir }}/elasticsearch.yml"
    owner: "{{ graylog_es_user }}"
    group: "{{ graylog_es_group }}"
    mode: 0644
    force: yes
    backup: yes
  register: system_change
  notify: restart elasticsearch

- name: "Copy JVM Configuration File."
  become: yes
  template:
    src: jvm.options.j2
    dest: "{{ graylog_es_conf_dir }}/jvm.options"
    owner: "{{ graylog_es_user }}"
    group: "{{ graylog_es_group }}"
    mode: 0644
    force: yes
    backup: yes
  register: system_change
  notify: restart elasticsearch

- name: "Copy log4j2 Configuration File."
  become: yes
  template:
    src: log4j2.properties.j2
    dest: "{{ graylog_es_conf_dir }}/log4j2.properties"
    owner: "{{ graylog_es_user }}"
    group: "{{ graylog_es_group }}"
    mode: 0644
    force: yes
    backup: yes
  register: system_change
  notify: restart elasticsearch

- name: "Copy Default File for Instance."
  become: yes
  template:
    src: elasticsearch.j2
    dest: "{{ graylog_es_default_file}}"
    mode: 0644
    force: yes
    backup: yes
  notify: restart elasticsearch

- meta: "flush_handlers"

- name: "Wait for Elasticsearch to start."
  wait_for:
    host: "127.0.0.1"
    port: 9200
    delay: 5
    connect_timeout: 1

### MongoDB

- name: "Install YUM Key for the MongoDB Repository."
  yum_key:
    key: "{{ graylog_mongodb_gpgkey }}"
    state: present

- name: "Install MongoDB Repository on Ubuntu."
  apt_repository:
    repo: "{{ graylog_mongodb_ubuntu_repo }}"
    state: "present"
    update_cache: false # Workaround
  when: ansible_distribution == 'Ubuntu'

- name: "Install MongoDB Repository on Debian."
  apt_repository:
    repo: "{{ graylog_mongodb_debian_repo }}"
    state: "present"
    update_cache: false # Workaround
  when: ansible_distribution == 'Debian'

- name: "Install MongoDB."
  package:
    name: "mongodb-org"
    state: "present"
  notify: "systemd dameon-reload"

- name: "Configure MongoDB."
  template:
    src: "mongodb.conf.j2"
    dest: "/etc/mongod.conf"
    owner: "root"
    group: "root"
    mode: 0644
  notify: "restart mongod"

- meta: "flush_handlers"

- name: "Wait for MongoDB to start."
  wait_for:
    host: "127.0.0.1"
    port: 27017
    delay: 5
    connect_timeout: 1

- name: "Ensure correct FeatureCompatibilityVersion for Graylog."
  shell: |
    mongo --eval "db.adminCommand( { setFeatureCompatibilityVersion: '{{ graylog_tunable_mongodb_featurecompatibilityversion }}' } )"

### Graylog

- name: "Download Graylog Repository Package."
  get_url:
    url: "{{ graylog_apt_deb_url }}"
    dest: "/tmp/graylog_repository.deb"
  when: graylog_manage_apt_repo

- name: " Install Graylog Repository Package."
  apt:
    deb: "/tmp/graylog_repository.deb"
    state: present
    dpkg_options: "force-all"
  when: graylog_manage_apt_repo
  register: "install_repo"

- name: "Update APT Cache."
  apt:
    update_cache: true

- name: "Install Graylog Server Package."
  package:
    name: "graylog-server{% if graylog_server_version is defined %}={{ graylog_server_version }}{% endif %}"
    state: "{{ graylog_package_state }}"
  notify: "restart graylog-server"

# - name: "Set Elasticsearch Priority to {{ graylog_es_debian_pin_version }} via apt_preferences."
#   template:
#     src: "apt_preferences.d/debian_elasticsearch.j2"
#     dest: "/etc/apt/preferences.d/elasticsearch"
#     owner: "root"
#     mode: 0644

- name: "Create Graylog Directory with correct Ownership and Privileges."
  file:
    path: "/etc/graylog/server"
    owner: "graylog"
    group: "graylog"
    mode: 0750

- name: "Configure Graylog Server."
  template:
    src: "graylog.server.conf.j2"
    dest: "/etc/graylog/server/server.conf"
    owner: "graylog"
    group: "graylog"
    mode: 0644
  notify: "restart graylog-server"

- name: "Configure Graylog Server defaults."
  template:
    src: "graylog.server.default.j2"
    dest: "{{ graylog_server_defaults_file_path }}"
    owner: "graylog"
    group: "graylog"
    mode: 0644
  notify: "restart graylog-server"

- name: "Make sure Graylog Server starts after reboot."
  file:
    path: "/etc/init/graylog-server.override"
    state: "absent"

- meta: "flush_handlers"

- name: "Wait for Graylog Server to start."
  uri:
    url: "{{ graylog_http_publish_uri }}"
    status_code: 200
    validate_certs: False
  register: result
  until: result.status == 200
  retries: 60
  delay: 5
